; Sample supervisor config file.

[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)
user=kite                 ; (default is current user, required if root)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:filterdaemon]
command=<%= @appdir %>filterdaemon.py <%= @maildirs %> ; the program (relative uses PATH, can take args)
process_name=filterdaemon_sup ; process_name expr (default %(program_name)s)
stdout_logfile=/tmp/filterdaemon.out        ; stdout log path, NONE for none; default AUTO
redirect_stderr=true
startretries=20
directory=<%= @maildirs %>

[program:python_serv]
command=<%= @appdir %>server.py <%= @maildirs %>
process_name=kite_server
stdout_logfile=/tmp/kiteserv.out
redirect_stderr=true
startretries=20
directory=<%= @maildirs %>
